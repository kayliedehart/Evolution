                           Dealer                             Player

                                +                                +
                                |                                |
                                |  takeCards(list of TraitCard)  |
                                +------------------------------> |
                                |                                |
                                |                                |
                                |                                +------------------------------------------+
                                |                                |                                          |
                                |                                |                                          |
                                |                                |                                          |
                                |                                |                                          |
                                |      wateringHoleDiscard()     |                                          |
                                +------------------------------> |                                          |
                         +------+                                |                                          |
                         |      |       exchange()               |                                          |
                         |      +------------------------------> |                                          |
        repeat 3 times---+      |                                |     +--------------------------------+   |
                         |      | <------------------------------+ <---+Either:                         |   |
                         |      |                                |     |exchangeSpeciesBoard(TraitCard) |   |
                         +------+                                |     |or                              |   |
                                |                                |     |exchangeBodySize(TraitCard,     |   |
                                |                                |     |   SpeciesBoard)                |   +----+
                                |       flipCard()               |     |or                              |   |  repeat each round
                                +------------------------------> |     |exchangeAnimal(TraitCard,       |   |
                                |                                |     |   SpeciesBoard)                |   |
                                |                                |     +--------------------------------+   |
                                |                                |                                          |
                                |                                |                                          |
                                |   feedPlayer(WateringHole,     |                                          |
                                |     list of SpeciesBoards)     | +----+                                   |
                                +------------------------------> |      |                                   |
                                |                                |      |                                   |
                                |                                |      +---+ repeated until player         |
+----------------------------+  |                                |      |     runs out of                   |
|Either:                     +> +------------------------------> |      |     species to feed               |
|pickSpeciesBoard(list of    |  |                                | +----+                                   |
|  SpeciesBoard)             |  |                                |                                          |
|or                          |  |                                |                                          |
|giveFoodToken()             |  |                                |                                          |
|                            |  |                                +------------------------------------------+
+----------------------------+  |                                |
                                |         score(String)          |
                                +------------------------------> |
                                |                                |
                                |                                |
                                +                                +


Data Definitions:
A Trait is an enumeration of one of the following:
    Carnivore, Ambush, Burrowing, Climbing, Cooperation, FatTissue, Fertile, Foraging, HardShell, Herding, Horns, LongNeck,
    PackHunting, Scavenger, Symbiosis, WarningCall

A TraitCard is a tuple (Trait, int) where the int represents a foodToken value

A FoodBag is an object with a field foodTokens that is an int

A WateringHole is a object with fields foodTokens and cards. foodTokens is an int representing how many food
tokens are on the board, and cards is a list of TraitCard representing the trait cards on the watering hole in the game

A Deck is a list of TraitCard of maximum length 122 with at most 17 TraitCard with Carnivore Traits and at most
7 TraitCard of each of the other types of Traits

A SpeciesBoard is a object with a field popSize, body, and traits. popSize and body are int's in the range 0-7 inclusive.
traits is a list of TraitCard of length 0-3 inclusive.



Player Methods:
takeCards: List of TraitCard of length at least 3 -> None
    Gives the player cards at the beginning of each round.
    Example: takeCards(Carnivore, 2) -> None

wateringHoleDiscard: None -> TraitCard
    Method returns the trait card the player wants to discard to the watering hole at the beginning of the turn
    Example: wateringHoleDiscard() -> (Carnivore, 2)

exchange: None -> TraitCard
    Method calls the either exchangeSpeciesBoard, exchangeBodySize, or exchangeAnimal in Dealer & returns
    the card it is trading in during that exchange
    Example: exchange() -> (Carnivore, 2)

flipCard: None -> List of SpeciesBoard
    player hands dealer their list of species boards after they finish the exchange process.
    Example: flipCard() -> ((3, 2, ()), (2, 7, ((HardShell, 3), (Carnivore, 5))))

arrangeBoards: None -> List of SpeciesBoard
    Method has player arrange their species boards and return that ordered list
    Example: arrangeboards() -> ((3, 2, ()), (2, 7, ((HardShell, 3), (Carnivore, 5))))

feedPlayer: WateringHole, list of SpeciesBoard -> SpeciesBoard
    Player selects what species board they want to feed that round based on what is in the watering hole and what
    the other species boards on the field are.
    Example: feedPlayer((3, (Carnivore, 3)), ((3, 2, ()), (2, 7, ((HardShell, 3), (Carnivore, 5)))) -> (2, 1, ())

pickSpeciesBoard: List of SpeciesBoard -> SpeciesBoard
    The player has played a carnivore so they chose which (valid) species board they can eat.
    Example: pickSpeciesBoard((3, (Carnivore, 3)), ((3, 2, ()), (2, 7, ((HardShell, 3), (Carnivore, 5)))) -> (2, 1, ())

giveFoodToken: int -> None
    Gives the player a certain amount of food tokens when they feed their non-Carnivore species board
    Example: giveFoodToken(2) -> None

score: String -> None
    Gives the player a printable string showing the scores when the game ends
    Example: score("You won!") -> None


Dealer Methods:

exchangeSpeciesBoard: TraitCard -> SpeciesBoard
    Gives the player a new species board in exchange for one of their new TraitCards
    Example: exchangeSpeciesBoard((Carnivore, 2)) -> (1, 0, ())

exchangeBodySize: TraitCard, SpeciesBoard -> SpeciesBoard
    Increases the body size of the given SpeciesBoard in exchange for taking one of the player's new TraitCard
    Example: exchangeBodySize((Carnivore, 2), (1, 0, ())) -> (1, 1, ())

exchangeAnimal: TraitCard, SpeciesBoard -> SpeciesBoard
    Increases the population size of the given SpeciesBoard in exchange for taking one of the player's new TraitCard
    Example: exchangeAnimal((Carnivore, 2), (1, 0, ())) -> (2, 0, ())


To create an instance of the player:
Use an init method that takes an int to be the players assigned name, as well as a empty food bag.


To create an instance of the dealer:
Use an init method that takes the number of players as an int. The dealer then initializes that many players.


Sequencing Constraints:
All calls between player and dealer must happen in the order specified in the diagram above.


Security Constraints:
Player is handed single objects and can keep track of these themselves; however, the Dealer holds the game state and checks the
legality of all player moves. The dealer always hands the player a new object that is sperate from the dealer's idea of the game
meaning that the player cannot mutate the dealer's information and the dealer will know if they cheat.